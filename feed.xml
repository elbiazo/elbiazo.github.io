<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://vtl0.com/</id><title>biazo</title><subtitle>Biazo Blog</subtitle> <updated>2025-03-07T18:31:04-05:00</updated> <author> <name>biazo</name> <uri>https://vtl0.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://vtl0.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://vtl0.com/"/> <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator> <rights> © 2025 biazo </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>CVE-2019-2215 Bad Binder Writeup</title><link href="https://vtl0.com/posts/bad_binder/" rel="alternate" type="text/html" title="CVE-2019-2215 Bad Binder Writeup" /><published>2023-05-27T00:00:00-04:00</published> <updated>2023-05-29T22:38:51-04:00</updated> <id>https://vtl0.com/posts/bad_binder/</id> <content src="https://vtl0.com/posts/bad_binder/" /> <author> <name>biazo</name> </author> <category term="android_kernel" /> <summary> Overview Bad Binder (CVE-2019-2215) is a UaF in Binder (Android IPC) and epoll (Async IO). This blog will go over why there is use-after-free (UaF) and how we can use UaF to achieve arbitrary read/write and perform a Privilege Escalation (PE). Exploit Exploit for this writeup will be hosted here Environment Setup Since this bug is in Binder and doesn’t require vendor specific kernel module... </summary> </entry> <entry><title>srsRan 4G Setup</title><link href="https://vtl0.com/posts/srsran-4g-setup/" rel="alternate" type="text/html" title="srsRan 4G Setup" /><published>2023-05-22T00:00:00-04:00</published> <updated>2023-05-29T22:38:51-04:00</updated> <id>https://vtl0.com/posts/srsran-4g-setup/</id> <content src="https://vtl0.com/posts/srsran-4g-setup/" /> <author> <name>biazo</name> </author> <category term="baseband" /> <summary> Hardware BladeRfMicro A4 sysmocom sim Card reader Omnikey CardMan or MCR3512 Software Ubuntu 22.04 VMware Workstation Install Ubuntu in VMware change usb setting USB Compatibility to USB 3.1 Update/Match IMSI with MCC/MNC pushing mcc mnc and changing the imsi to match the first five digit of sim card need to match mcc mnc . for us its 001 01 (test network) Example Confi... </summary> </entry> <entry><title>Loadable Kernel Modules</title><link href="https://vtl0.com/posts/loadable_kernel_modules/" rel="alternate" type="text/html" title="Loadable Kernel Modules" /><published>2023-05-08T00:00:00-04:00</published> <updated>2023-05-29T22:38:51-04:00</updated> <id>https://vtl0.com/posts/loadable_kernel_modules/</id> <content src="https://vtl0.com/posts/loadable_kernel_modules/" /> <author> <name>biazo</name> </author> <category term="linux_kernel" /> <summary> Overview Whether you are fuzzing or looking into certain Linux subsystems, you might need to set up a loadable kernel module if you selected m option on kernel config. An example would be something like Netfilter which would load that module when you use them dynamically. If you do an lsmod you should be able to see some of loadable kernel modules like nfnetlink (Netfilter component). These a... </summary> </entry> <entry><title>Visualizing KCOV with syz-cover</title><link href="https://vtl0.com/posts/kcov-syz-cover/" rel="alternate" type="text/html" title="Visualizing KCOV with syz-cover" /><published>2023-04-27T00:00:00-04:00</published> <updated>2023-05-29T22:38:51-04:00</updated> <id>https://vtl0.com/posts/kcov-syz-cover/</id> <content src="https://vtl0.com/posts/kcov-syz-cover/" /> <author> <name>biazo</name> </author> <category term="fuzzing" /> <summary> Overview If you have used syzkaller, you seen how they have visualizer for kernel coverage. You can actually use syz-cover to do this with any kcov. Syzkaller Coverage Viewer Building syz-cover Prereq If you never installed syzkaller before follow this guide Build syz-cover (cover) git clone https://github.com/google/syzkaller cd syzkaller make cover syz-cover should be under syzkalle... </summary> </entry> <entry><title>CVE-2020-27786 FUSE UaF</title><link href="https://vtl0.com/posts/cve-2020-27786/" rel="alternate" type="text/html" title="CVE-2020-27786 FUSE UaF" /><published>2023-04-26T00:00:00-04:00</published> <updated>2023-05-29T22:38:51-04:00</updated> <id>https://vtl0.com/posts/cve-2020-27786/</id> <content src="https://vtl0.com/posts/cve-2020-27786/" /> <author> <name>biazo</name> </author> <category term="linux_kernel" /> <summary> Overview I was looking for nday that I can use to learn more about FUSE since userfaultfd technique is dead in lastest kernel :(. My good friend c0ld21 was porting kiks PoC of CVE-2020-27786 which is written for 4.9.223 to 5.6.13 and I scheme through the original PoC and thought it was a good candidate to learn more about FUSE. The reason being it triggers UaF via race condition through userfa... </summary> </entry> </feed>
